# Copyright Contributors to the Packit project.
# SPDX-License-Identifier: MIT

---
- name: Install dependencies for packit-service worker
  hosts: all
  vars:
    source_branch: "{{ lookup('env', 'SOURCE_BRANCH') }}"
    deployment: "{{ lookup('env', 'DEPLOYMENT', default='stg') }}"
  tasks:
    - import_tasks: tasks/process-source-branch.yaml
    - name: Install UV package manager
      ansible.builtin.dnf:
        name: uv
        state: present
    - name: Install all RPM/python packages needed to run packit-service worker
      ansible.builtin.dnf:
        name:
          - nss_wrapper # openshift anyuid passwd madness
          - python3-requests
          - python3-sqlalchemy
          - python3-psycopg2
          - python3-redis
          - python3-celery
          - python3-lazy-object-proxy
          - python3-sentry-sdk
          - python3-syslog-rfc5424-formatter # logging to Splunk
          - dnf-utils
          - make
          - python3-kubernetes
          - python3-prometheus_client
          - libffi-devel
          # for pip-installing sandcastle from git repo
          - git-core
          # oc rsync /tmp/sandcastle -> sandcastle pod
          - rsync
          - postgresql # pg_dump
          - python3-boto3 # AWS (S3)
          - python3-fasjson-client
          - python3-gevent # concurrency pool, see run_worker.sh
          - bodhi-client
          # sandcastle deps
          - python3-charset-normalizer
          - python3-google-auth
          - python3-oauthlib
          - python3-pyyaml
          - python3-requests-oauthlib
          - python3-websocket-client
          # for the `pkg_tool` switch to allow centpkg
          - centpkg
        state: present
        install_weak_deps: False
    - name: Create UV virtual environment with system site packages
      ansible.builtin.command:
        cmd: uv venv --system-site-packages /opt/packit-venv
        creates: /opt/packit-venv
    - name: Check if OGR source directory exists
      ansible.builtin.stat:
        path: /home/packit/ogr
      register: ogr_source

    - name: Install OGR from local source in UV venv
      ansible.builtin.command:
        cmd: uv pip install --python /opt/packit-venv/bin/python /home/packit/ogr
      when: ogr_source.stat.exists and ogr_source.stat.isdir

    - name: Install OGR from git if local source not available
      ansible.builtin.command:
        cmd: uv pip install --python /opt/packit-venv/bin/python git+https://github.com/packit/ogr.git@{{ source_branch }}
      when: not (ogr_source.stat.exists and ogr_source.stat.isdir)
    - name: Install all Python packages in UV venv
      ansible.builtin.shell:
        cmd: |
          source /opt/packit-venv/bin/activate
          if [ -d "/home/packit/ogr" ]; then
            uv pip install /home/packit/ogr
          else
            uv pip install git+https://github.com/packit/ogr.git@{{ source_branch }}
          fi
          uv pip install git+https://github.com/packit/sandcastle.git@{{ source_branch }} eventlet pydevd-pycharm~=251.26094.141 debugpy
          {% if deployment != 'prod' %}
          uv pip install guppy3
          {% endif %}
          pip check
    - name: Create symlink for easy access to UV venv python
      ansible.builtin.file:
        src: /opt/packit-venv/bin/python
        dest: /usr/local/bin/packit-python
        state: link
    - import_tasks: tasks/setup-copr-repos.yaml
    - name: Install ogr, specfile and packit from copr
      ansible.builtin.dnf:
        name:
          # - python3-ogr  # Now installed in UV venv from local source
          - python3-specfile
          - packit
        state: latest
    - name: Install OpenScanHub client from Copr
      ansible.builtin.dnf:
        name: osh-client
        state: latest
    - name: Install OKD CLI (oc) # sandcastle
      ansible.builtin.unarchive:
        src: https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
        remote_src: true
        dest: /usr/bin/
